class Solution {
    public int singleNonDuplicate(int[] nums) {
        int n=nums.length;
        if(n==1)return nums[0]; //length==1
        if(nums[0]!=nums[1])return nums[0];     //element is in 1st index
        if(nums[n-2]!=nums[n-1])return nums[n-1];   //element is in last index
        int low=1;
        int high=n-2;
        while(low<=high){
            int mid=(low+high)/2;
            if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1]){
                return nums[mid];
            }
            //elimnating left part
            if((mid%2==1 && nums[mid]==nums[mid-1]) || (mid%2==0 && nums[mid]==nums[mid+1])){
                low=mid+1;  
            }
            //eliminating right part
            else{
                high=mid-1;
            }
        }
        return -1;
    }
}